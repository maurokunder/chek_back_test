{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/transfer-history/transfer-history.component.html","./src/app/components/transfer-history/transfer-history.component.ts","./src/app/services/transfer-service.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/global-header/global-header.component.html","./src/app/components/global-header/global-header.component.ts","./src/app/services/bank.service.ts","./src/app/components/autocomplete-component/autocomplete-component.component.ts","./src/app/components/autocomplete-component/autocomplete-component.component.html","./src/app/components/new-recipient/new-recipient.component.ts","./src/app/components/new-recipient/new-recipient.component.html","./src/app/services/recipient.service.ts","./src/app/components/transfer/transfer.component.ts","./src/app/components/transfer/transfer.component.html","./src/app/app-routing.module.ts","./src/app/components/title-component/title-component.component.ts","./src/app/components/title-component/title-component.component.html","./src/app/components/new-recipient/new-recipient.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<app-title-component [enterTitle]=\"enterTitle\"></app-title-component>\n<div class=\"container\">\n        <mat-card class=\"size-card\">\n            <table mat-table [dataSource]=\"arrayService\" class=\"mat-elevation-z8\">\n\n            <!--- Note that these columns can be defined in any order.\n                    The actual rendered columns are set as a property on the row definition\" -->\n            \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"Nombre Destinatario\">\n                <th mat-header-cell *matHeaderCellDef> Nombre Destinatario </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.fullName}} </td>\n            </ng-container>\n            \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"Rut\">\n                <th mat-header-cell *matHeaderCellDef> Rut </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.rut}} </td>\n            </ng-container>\n            \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"Banco\">\n                <th mat-header-cell *matHeaderCellDef> Banco </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.bankId}} </td>\n            </ng-container>\n            \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"Tipo de Cuenta\">\n                <th mat-header-cell *matHeaderCellDef> Tipo de Cuenta </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.typeAccount}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Monto\">\n                <th mat-header-cell *matHeaderCellDef> Monto </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.amount}} </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TransferServiceService } from 'src/app/services/transfer-service.service';\n\n@Component({\n  selector: 'app-transfer-history',\n  templateUrl: './transfer-history.component.html',\n  styleUrls: ['./transfer-history.component.scss']\n})\nexport class TransferHistoryComponent implements OnInit {\n  public enterTitle = 'Historial de Transferencia';\n  public arrayService = [];\n  displayedColumns: string[] = ['Nombre Destinatario', 'Rut', 'Banco', 'Tipo de Cuenta', 'Monto'];\n\n  constructor(\n    private transferService: TransferServiceService,\n  ) { }\n\n  ngOnInit(): void {\n    this.transferService.historyTransfer().subscribe(\n      (response: any[]) => {\n        this.arrayService = response.sort((a,b) => { \n          return Date.parse(b.createdAt) - Date.parse(a.createdAt); \n      });\n    });\n  }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransferServiceService {\n  \n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  public addNewtransfer(bodyService: any) {\n    const request = bodyService;\n\n    return this.http.post<any>(\n      `${environment.backendUrl}/transfer`, request, {});\n  }\n\n  public historyTransfer() {  \n    return this.http.get<any>(\n      `${environment.backendUrl}/history-transfers/`, {});\n  }\n\n  public transferById() {\n\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MediaObserver, MediaChange} from '@angular/flex-layout';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'chek-front-test-s';\n  mediaSub: Subscription;\n  deviceXs: boolean;\n  constructor(\n    public mediaObserver: MediaObserver,\n  ) {}\n\n  public ngOnInit(): void {\n    this.mediaSub = this.mediaObserver.media$.subscribe((result: MediaChange) => {\n      // console.log(result.mqAlias);\n      this.deviceXs = result.mqAlias === 'xs' ? true : false;\n    });\n  }\n  public ngOnDestroy(): void {\n    this.mediaSub.unsubscribe();\n  }\n}\n","<app-global-header [deviceXs]=\"deviceXs\"></app-global-header>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { Ng2Rut } from 'ng2-rut';\n\n\nimport { AppComponent } from './app.component';\nimport { GlobalHeaderComponent } from './components/global-header/global-header.component';\nimport { NewRecipientComponent } from './components/new-recipient/new-recipient.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\nimport { TransferHistoryComponent } from './components/transfer-history/transfer-history.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TitleComponentComponent } from './components/title-component/title-component.component';\nimport { NewRecipientComponentModule } from './components/new-recipient/new-recipient.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AutocompleteComponentComponent } from './components/autocomplete-component/autocomplete-component.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GlobalHeaderComponent,\n    NewRecipientComponent,\n    TransferComponent,\n    TransferHistoryComponent,\n    TitleComponentComponent,\n    AutocompleteComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    AppRoutingModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NewRecipientComponentModule,\n    HttpClientModule,\n    MatTableModule,\n    MatAutocompleteModule,\n    Ng2Rut,\n    MatDialogModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<mat-toolbar class=\"toolbar_color\">\n    <mat-toolbar-row fxLayoutAlign=\"space-around center\">\n        <div fxLayoutAlign=\"row\">\n            <button mat-button color=\"primary\">\n                <mat-icon >account_balance</mat-icon>\n                <span class=\"logo\">Mi Banco</span>\n                <span class=\"feature-text\" *ngIf=\"!deviceXs\">- Nueva Transferencia</span>\n            </button>\n            <div *ngIf=\"!deviceXs\">\n                <button mat-flat-button color=\"primary\" [routerLink]=\"['nuevo-destinatario']\" routerLinkActive=\"router-link-active\">Nuevo Destinatario</button>\n                <button mat-flat-button color=\"primary\" [routerLink]=\"['transferir']\">Transferir</button>\n                <button mat-flat-button color=\"primary\" [routerLink]=\"['historial']\">Historial</button>\n            </div>\n        </div>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row *ngIf=\"deviceXs\" fxLayoutAlign=\"space-between end\">\n        <button mat-button color=\"primary\" [routerLink]=\"['nuevo-destinatario']\" routerLinkActive=\"router-link-active\">Nuevo Destinatario</button>\n        <button mat-button color=\"primary\" [routerLink]=\"['transferir']\">Transferir</button>\n        <button mat-button color=\"primary\" [routerLink]=\"['historial']\">Historial</button>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-global-header',\n  templateUrl: './global-header.component.html',\n  styleUrls: ['./global-header.component.scss']\n})\nexport class GlobalHeaderComponent {\n  @Input() deviceXs: boolean;\n\n  constructor() { }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class BankService {\n    constructor(\n        private http: HttpClient\n    ) { }\n\n    public getParams(): Observable<any> {\n        return this.http.get(\n            `https://bast.dev/api/banks.php`, {});\n    }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-autocomplete-component',\n  templateUrl: './autocomplete-component.component.html',\n  styleUrls: ['./autocomplete-component.component.scss']\n})\nexport class AutocompleteComponentComponent implements OnChanges {\n  @Input() dataSource: any = [];\n  @Output() newItemEvent = new EventEmitter<any>();\n  \n  public options: any = this.dataSource;\n  myControl = new FormControl();\n\n  filteredOptions: Observable<any[]>;\n  \n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.options = this.dataSource;\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => (typeof value === 'string' ? value : value.fullName)),\n      map(name => (name ? this._filter(name) : this.options.slice())),\n    );\n  }\n\n  displayFn(user: any): string {\n    return user && user.fullName ? user.fullName : '';\n  }\n\n  private _filter(name: string): any[] {\n    const filterValue = name.toLowerCase();\n\n    return this.options.filter(option => option.fullName.toLowerCase().includes(filterValue));\n  }\n\n  public objectAfterSelection(option: any){\n    this.newItemEvent.emit(option);\n  }\n}\n","<form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n    <mat-label>Buscar Destinatario</mat-label>\n    <input type=\"text\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" \n        (onSelectionChange)=\"objectAfterSelection(option)\" \n        [value]=\"option\">\n        {{option.fullName}}\n        </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { MediaObserver, MediaChange} from '@angular/flex-layout';\nimport { Bank, TypeAccount } from 'src/app/models/cuenta';\nimport { BankService } from 'src/app/services/bank.service';\nimport { RecipientService } from 'src/app/services/recipient.service';\nimport { validateRUT } from 'validar-rut';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-new-recipient',\n  templateUrl: './new-recipient.component.html',\n  styleUrls: ['./new-recipient.component.scss']\n})\nexport class NewRecipientComponent implements OnInit {\n\n  public newRecipientForm: FormGroup;\n  public enterTitle = 'Nuevo Destinatario';\n  public returnClassSize: string;\n  public typeAccounts: TypeAccount[] = [];\n  public obtainBanks: Bank[] = [];\n  public validateRut: boolean = false;\n  mediaSub: Subscription;\n  deviceXs: boolean;\n\n  constructor(\n    public mediaObserver: MediaObserver,\n    private bankService: BankService,\n    private recipientService: RecipientService,\n  ) { }\n\n  public ngOnInit(): void {\n    this.newRecipientForm = new FormGroup({\n      rut: new FormControl('', [Validators.required]),\n      fullName: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.pattern('^[^@]+@[^@]+\\.[a-zA-Z]{2,}$')]),\n      phone: new FormControl('', [Validators.required, Validators.pattern(\"[0-9]+\")]),\n      bankId: new FormControl('',[Validators.required]),\n      typeAccount: new FormControl('', [Validators.required]),\n      accountNumber: new FormControl('', [Validators.required, Validators.pattern(\"[0-9]+\")]),\n    });\n    this.mediaSub = this.mediaObserver.media$.subscribe((result: MediaChange) => {\n      this.deviceXs = result.mqAlias === 'xs' ? true : false;\n      this.returnClassSize = this.deviceXs ? 'mobile-width' : 'desktot-width';\n    });\n    this.bankService.getParams().subscribe(\n      (result) => {\n        this.obtainBanks = result.banks;\n      }\n    );\n\n    this.typeAccounts = [\n      { value: 'account-0', viewValue: 'Cuenta Corriente' },\n      { value: 'account-1', viewValue: 'Cuenta Vista' },\n      { value: 'account-2', viewValue: 'Cuenta Ahorro' },\n    ];\n  }\n\n  public get emailValid() {\n    return this.newRecipientForm.get('email').invalid && this.newRecipientForm.get('email').touched;\n  }\n\n  public get rutValid() {\n    return this.newRecipientForm.get('rut').invalid && this.newRecipientForm.get('rut').touched;\n  }\n\n  public get nameValid() {\n    return this.newRecipientForm.get('fullName').invalid && this.newRecipientForm.get('fullName').touched;\n  }\n\n  public get phoneValid() {\n    return this.newRecipientForm.get('phone').invalid && this.newRecipientForm.get('phone').touched;\n  }\n\n  public get accountValid() {\n    return this.newRecipientForm.get('accountNumber').invalid && this.newRecipientForm.get('accountNumber').touched;\n  }\n\n  public get bankValid() {\n    return this.newRecipientForm.get('bankId').invalid && this.newRecipientForm.get('bankId').touched;\n  }\n\n  public get typeAccountValid() {\n    return this.newRecipientForm.get('typeAccount').invalid && this.newRecipientForm.get('typeAccount').touched;\n  }\n\n  public saveForm() {\n    const returnValue = this.findTypeAccount(this.newRecipientForm.value);\n    this.newRecipientForm.value['typeAccount'] = returnValue;\n    if (this.newRecipientForm.valid) {\n      console.log('Form data is ', this.newRecipientForm.value);\n      this.recipientService.addNewRecipient(this.newRecipientForm.value).subscribe();\n      swal('Nuevo Destinatario', this.newRecipientForm.value['fullName']\n        + ' ha sido ingresado con exito', 'success');\n      this.newRecipientForm.reset();\n    } else {\n      swal('Nuevo Destinatario', 'Ocurrio un problema al ingresar un nuevo Destinatario', 'error');\n    }\n  }\n\n  public findTypeAccount (value: any): any {\n    const account = this.typeAccounts.find((r) => r.value === value['typeAccount']);\n    return account.viewValue;\n  }\n\n  public formatCliente ($even) {\n    $even.target.value = $even.target.value\n    .replace(/[^0-9]/g, '')\n    .replace( /^(\\d{1,2})(\\d{3})(\\d{3})(\\w{1})$/, '$1.$2.$3-$4');\n    this.validateRut = validateRUT($even.target.value);\n  }\n\n  public formatName($even) {\n    $even.target.value = $even.target.value\n      .replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())));\n  }\n}\n","<app-title-component [enterTitle]=\"enterTitle\"></app-title-component>\n<div class=\"container\">\n    <form [formGroup]=\"newRecipientForm\" class=\"form-container\">\n        <mat-card class=\"size-card\">\n            <div class=\"row\">\n                <mat-form-field class=\"{{returnClassSize}}\" appearance=\"fill\">\n                    <mat-label>Rut</mat-label>\n                    <input formControlName=\"rut\" (keyup)=\"formatCliente($event)\" [class.is-invalid]=\"rutValid && validateRut\" matInput placeholder=\"Ej: 16.806.320-2\">\n                    <small *ngIf=\"rutValid\" class=\"text-danger\">Ingrese un Rut valido</small>\n                </mat-form-field>\n                <mat-form-field class=\"{{returnClassSize}}\" appearance=\"fill\">\n                    <mat-label>Nombre</mat-label>\n                    <input formControlName=\"fullName\" (keyup)=\"formatName($event)\" [class.is-invalid]=\"rutValid\" matInput placeholder=\"Ej: Juan Andres Gonzalez Gonzalez\">\n                    <small *ngIf=\"nameValid\" class=\"text-danger\">Debes ingresar un nombre</small>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <mat-form-field class=\"{{returnClassSize}}\" appearance=\"fill\">\n                    <mat-label>Correo</mat-label>\n                    <input formControlName=\"email\" [class.is-invalid]=\"emailValid\" matInput placeholder=\"Ej: ejemplo@gmail.com\">\n                    <small *ngIf=\"emailValid\" class=\"text-danger\">Ingrese un email valido</small>\n                </mat-form-field>\n                <mat-form-field class=\"{{returnClassSize}}\" appearance=\"fill\">\n                    <mat-label>Teléfono</mat-label>\n                    <input formControlName=\"phone\" [class.is-invalid]=\"phoneValid\" matInput placeholder=\"Ej:56934432579\">\n                    <small *ngIf=\"phoneValid\" class=\"text-danger\">Ingrese un telefono valido</small>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <mat-form-field class=\"{{returnClassSize}}\" appearance=\"fill\">\n                    <mat-label>Banco</mat-label>\n                    <mat-select formControlName=\"bankId\">\n                       <mat-option *ngFor=\"let bank of obtainBanks\" [class.is-invalid]=\"bankValid\" [value]=\"bank.name\">\n                        {{bank.name}}\n                        </mat-option>\n                    </mat-select>\n                    <small *ngIf=\"bankValid\" class=\"text-danger\">Seleccione un Banco</small>\n                </mat-form-field>\n                <mat-form-field class=\"{{returnClassSize}}\" appearance=\"fill\">\n                    <mat-label>Tipo de Cuenta</mat-label>\n                    <mat-select formControlName=\"typeAccount\">\n                       <mat-option  *ngFor=\"let type of typeAccounts\" [class.is-invalid]=\"typeAccountValid\" [value]=\"type.value\">\n                        {{type.viewValue}}\n                        </mat-option>\n                    </mat-select>\n                    <small *ngIf=\"typeAccountValid\" class=\"text-danger\">Seleccione un tipo de cuenta</small>\n                </mat-form-field>\n            </div>\n\n            <div class=\"row\">\n                <mat-form-field class=\"{{returnClassSize}}\" appearance=\"fill\">\n                    <mat-label>N° De Cuenta</mat-label>\n                    <input formControlName=\"accountNumber\" [class.is-invalid]=\"accountValid\" matInput placeholder=\"00252092303\">\n                    <small *ngIf=\"accountValid\" class=\"text-danger\">Solo puede ingresar números</small>\n                </mat-form-field>\n            </div>\n            <div class=\"row\">\n                <button class=\"{{returnClassSize}}\"\n                (click)=\"saveForm()\" \n                [disabled]=\"newRecipientForm.invalid\"\n                mat-flat-button color=\"primary\">Crear</button>\n            </div>\n        </mat-card>\n    </form>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecipientService {\n\n    constructor(\n    private http: HttpClient\n    ) { }\n\n    public addNewRecipient(bodyService: any) {\n    const request = bodyService;\n\n    return this.http.post<any>(\n        `${environment.backendUrl}/new_recipient`, request, {});\n    }\n\n    public allRecipients() {  \n    return this.http.get<any>(\n        `${environment.backendUrl}/all-recipients`, {});\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Recipient } from 'src/app/models/cuenta';\nimport { RecipientService } from 'src/app/services/recipient.service';\nimport { TransferServiceService } from 'src/app/services/transfer-service.service';\nimport swal from 'sweetalert';\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.scss']\n})\nexport class TransferComponent implements OnInit {\n  public enterTitle = 'Transferir';\n  public newRecipientForm: FormGroup;\n  public newRecipient: Recipient;\n  public arrayRecipient: any[] = [];\n  public booleanEmit: boolean = false;\n  public booleanAmount: boolean = false;\n\n\n  constructor(\n    private recipientService: RecipientService,\n    private trasnferService: TransferServiceService,\n  ) { }\n\n  ngOnInit(): void {\n    this.recipientService.allRecipients().subscribe(\n      (res:Recipient[]) => {\n        this.arrayRecipient = Object.values(res);\n      });\n    this.newRecipientForm = new FormGroup({});\n  }\n\n  public get amountValid() {\n    return this.newRecipientForm.get('amount').invalid && this.newRecipientForm.get('amount').touched;\n  }\n\n  public getObjetFromAutocomplete($even) {\n    if ($even) {\n      this.newRecipient = $even;\n      this.booleanEmit = true;\n      this.newRecipientForm = new FormGroup({\n          rut: new FormControl(this.newRecipient.rut),\n          fullName: new FormControl(this.newRecipient.fullName),\n          email: new FormControl(this.newRecipient.email),\n          phone: new FormControl(this.newRecipient.phone),\n          bankId: new FormControl(this.newRecipient.bankId),\n          typeAccount: new FormControl(this.newRecipient.typeAccount),\n          accountNumber: new FormControl(this.newRecipient.accountNumber),\n          amount: new FormControl('', [Validators.required])\n        });\n      }\n    }\n\n  public saveForm() {\n    //console.log('Form data is ', this.newRecipientForm.value);\n    if (this.newRecipientForm.valid && this.newRecipientForm.value['amount'] > 0) {\n      this.trasnferService.addNewtransfer(this.newRecipientForm.value).subscribe();\n      swal('Nueva Transferencia', 'Su transferencia se realizo con exito', 'success');\n      this.newRecipientForm.reset();\n    } else {\n      swal('Nueva Transferencia', 'Su transferencia no tiene un monto valido', 'error');\n    }\n  }\n  \n  public amountValidation ($even) {\n    if ($even.target.value < 1) {\n      $even.target.value = '';\n      this.booleanAmount = false;\n    } else {\n      this.booleanAmount = true;\n    }\n  }\n\n}\n","<app-title-component [enterTitle]=\"enterTitle\"></app-title-component>\n<div class=\"container\">\n    <form [formGroup]=\"newRecipientForm\" class=\"form-container\">\n        <mat-card class=\"size-card\">\n            <div class=\"row\">\n                <app-autocomplete-component [dataSource]=\"arrayRecipient\"\n                (newItemEvent)=\"getObjetFromAutocomplete($event)\"\n                ></app-autocomplete-component>\n            </div>\n\n            <div class=\"row\" *ngIf=\"booleanEmit\">\n                <div class=\"size_title\">\n                    <label class=\"separate\"><b>Detalle Destinatario</b></label>\n                </div>\n                <div class=\"separate\">\n                    <label><b>Nombre: </b></label>\n                    <label> {{ newRecipient.fullName }}</label>\n                </div>\n                <div class=\"separate\">\n                    <label><b>Correo: </b></label>\n                    <label> {{ newRecipient.email }}</label>\n                </div>\n                <div class=\"separate\">\n                    <label><b>Banco:</b></label>\n                    <label> {{ newRecipient.bankId }}</label>\n                </div>\n                <div class=\"separate\">\n                    <label><b>Tipo de Cuenta:</b></label>\n                    <label> {{ newRecipient.typeAccount }}</label>\n                </div>\n                <div class=\"row\">\n                    <mat-form-field  appearance=\"fill\">\n                        <mat-label>Monto</mat-label>\n                        <input \n                        type=\"number\"\n                        [class.is-invalid]=\"amountValid\"\n                        (keyup)=\"amountValidation($event)\"\n                        formControlName=\"amount\" matInput placeholder=\"Ej: 1000000\" min=\"1\" \n                        required>\n                        <small *ngIf=\"amountValid\" class=\"text-danger\">monto debe ser mayor que cero</small>\n                    </mat-form-field>\n                </div>\n            </div>\n\n\n            <div class=\"button_row\">\n                <button type=\"submit\" \n                class=\"desktot-width\" \n                (click)=\"saveForm()\" \n                [disabled]=\"newRecipientForm.invalid\"\n                mat-flat-button color=\"primary\">Transferir</button>\n            </div>\n        </mat-card>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NewRecipientComponent } from './components/new-recipient/new-recipient.component';\nimport { TransferHistoryComponent } from './components/transfer-history/transfer-history.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\n\nconst APP_ROUTES: Routes = [\n  { path: 'nuevo-destinatario', component: NewRecipientComponent },\n  { path: 'transferir', component: TransferComponent },\n  { path: 'historial', component: TransferHistoryComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'nuevo-destinatario'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(APP_ROUTES)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-title-component',\n  templateUrl: './title-component.component.html',\n  styleUrls: ['./title-component.component.scss']\n})\nexport class TitleComponentComponent {\n\n  @Input() enterTitle: string;\n\n  constructor() { }\n}\n","<div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"start end\">\n    <p>{{enterTitle}}</p>\n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BankService } from 'src/app/services/bank.service';\n\n@NgModule({\n    declarations: [],\n    imports: [ReactiveFormsModule],\n    providers: [BankService,\n                ReactiveFormsModule],\n    bootstrap: []\n})\nexport class NewRecipientComponentModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}